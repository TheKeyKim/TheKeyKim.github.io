<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://thekeykim.github.io/</id><title>인간 개발자 김덕휘</title><subtitle>개발자 성장, 알고리즘 풀이, 공부 궤적, 개인 생활, 될 대로 될 때까지</subtitle> <updated>2021-04-11T14:52:08+09:00</updated> <author> <name>DeokHwi, Kim</name> <uri>https://thekeykim.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://thekeykim.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://thekeykim.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 DeokHwi, Kim </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[백준] 18227 - 성대나라의 물탱크 C++</title><link href="https://thekeykim.github.io/posts/BOJ_18227/" rel="alternate" type="text/html" title="[백준] 18227 - 성대나라의 물탱크 C++" /><published>2021-04-04T16:55:00+09:00</published> <updated>2021-04-08T10:01:24+09:00</updated> <id>https://thekeykim.github.io/posts/BOJ_18227/</id> <content src="https://thekeykim.github.io/posts/BOJ_18227/" /> <author> <name>DeokHwi, Kim</name> </author> <category term="백준" /> <category term="C++" /> <summary> 문제링크 18227 - 성대나라의 물탱크 문제 성대나라에는 각 도시별로 가뭄을 대비하기 위한 물탱크가 하나씩 존재한다. 이 물탱크들은 모두 연결되어있으며, 루트(성대나라의 수도)가 있는 트리의 형태를 가진다. 지금 성대나라는 물탱크의 물을 사용하여 가뭄을 버텨냈으나, 그 영향으로 모든 물탱크에 물이 비어버리고 말았다. 성대나라의 물관리 시스템은 다소 특수해서, 물은 항상 다음과 같은 방식으로 채워진다: A번 도시에 물을 채우기로 했다면, 수도에서부터 A번 도시까지 잇는 직선 경로에 수도부터 차례대로 1L, 2L, ⋯이 채워져서 A번 도시에는&amp;nbsp;(수도부터 A번&amp;nbsp;도시까지의 도시 수) L 만큼 추가된다. 예를 들어, 아래 그림과 같이 물탱크가 연결되어 있을 때, "4번 도시... </summary> </entry> <entry><title>[백준] 12967 - pqr C++</title><link href="https://thekeykim.github.io/posts/BOJ_12967/" rel="alternate" type="text/html" title="[백준] 12967 - pqr C++" /><published>2021-03-29T23:55:00+09:00</published> <updated>2021-04-01T17:03:41+09:00</updated> <id>https://thekeykim.github.io/posts/BOJ_12967/</id> <content src="https://thekeykim.github.io/posts/BOJ_12967/" /> <author> <name>DeokHwi, Kim</name> </author> <category term="백준" /> <category term="C++" /> <summary> 문제링크 12967 - pqr 문제 N개의 수로 이루어진 배열 A과 정수 K가 주어진다. 0 ≤ p &amp;lt; q &amp;lt; r &amp;lt; N 이면서, A[p] * A[q] * A[r]이 K로 나누어 떨어지는 (p, q, r) 쌍의 개수를 구하는 프로그램을 작성하시오. 입력 첫째 줄에 N과 K가 주어진다. (3 ≤ N ≤ 2,000, 1 ≤ K ≤ 1,000,000) 둘째 줄에 배열 A에 포함되어 있는 수가 A[0]부터 A[N-1]까지 순서대로 주어진다. (1 ≤ A[i] ≤ 100,000,000) 풀이 유형 수학 풀이 단순한 완전 탐색으로는 풀리지 않는 문제다. 이 문제를 풀기 위해서 집중해서 봐야 할 것은 K의 범위다. K는 아무리 커도 100만 이하의 수다. 그리고 아래,... </summary> </entry> <entry><title>[백준] 1801 - 직사각형 만들기 C++</title><link href="https://thekeykim.github.io/posts/BOJ_1801/" rel="alternate" type="text/html" title="[백준] 1801 - 직사각형 만들기 C++" /><published>2021-03-23T21:55:00+09:00</published> <updated>2021-04-01T17:03:41+09:00</updated> <id>https://thekeykim.github.io/posts/BOJ_1801/</id> <content src="https://thekeykim.github.io/posts/BOJ_1801/" /> <author> <name>DeokHwi, Kim</name> </author> <category term="백준" /> <category term="C++" /> <summary> 문제링크 1801 - 직사각형 만들기 문제 막대 N개를 가지고 있다. 이 막대를 이용해 만들 수 있는 가장 큰 직사각형의 넓이를 구하는 프로그램을 작성하시오. 막대는 이어 붙일 수 있고, 조각낼 수는 없다. 예를 들어, 길이가 2인 막대와&amp;nbsp;3인 막대를 합쳐 5인 막대를 만들 수 있다. 예를 들어, 가지고 있는 막대의 길이가 1, 3, 3, 4, 5, 7라면, 3&amp;nbsp;두 개와 5, 그리고 1과 4를 붙여 5를 만들면 3*5 크기의 직사각형을 만들 수 있다. 입력 첫째 줄에 막대의 개수 N이 주어진다. N은 4보다 크거나 같고, 16보다 작거나 같은 자연수이다. 둘째 줄에 막대의 길이가 공백을 사이에 두고 주어진다. 막대의 길이는 10보다 작거나 같은 자연수... </summary> </entry> <entry><title>[백준] 10868 - 최솟값 C++</title><link href="https://thekeykim.github.io/posts/BOJ_10868/" rel="alternate" type="text/html" title="[백준] 10868 - 최솟값 C++" /><published>2021-03-10T21:29:00+09:00</published> <updated>2021-04-01T17:03:41+09:00</updated> <id>https://thekeykim.github.io/posts/BOJ_10868/</id> <content src="https://thekeykim.github.io/posts/BOJ_10868/" /> <author> <name>DeokHwi, Kim</name> </author> <category term="백준" /> <category term="C++" /> <summary> 문제링크 10806 - 최솟값 문제 N(1 ≤ N ≤ 100,000)개의 정수들이 있을 때, a번째 정수부터 b번째 정수까지 중에서 제일 작은 정수를 찾는 것은 어려운 일이 아니다. 하지만 이와 같은 a, b의 쌍이 M(1 ≤ M ≤ 100,000)개 주어졌을 때는 어려운 문제가 된다. 이 문제를 해결해 보자. 여기서 a번째라는 것은 입력되는 순서로 a번째라는 이야기이다. 예를 들어 a=1, b=3이라면 입력된 순서대로 1번, 2번, 3번 정수 중에서 최솟값을 찾아야 한다. 각각의 정수들은 1이상 1,000,000,000이하의 값을 갖는다. 입력 첫째 줄에 N, M이 주어진다. 다음 N개의 줄에는 N개의 정수가 주어진다. 다음 M개의 줄에는 a, b의 쌍이 주어진다. 풀이 유형 세... </summary> </entry> <entry><title>[백준] 2749 - 피보나치3 C++</title><link href="https://thekeykim.github.io/posts/BOJ_2749/" rel="alternate" type="text/html" title="[백준] 2749 - 피보나치3 C++" /><published>2021-03-09T23:00:00+09:00</published> <updated>2021-04-01T17:03:41+09:00</updated> <id>https://thekeykim.github.io/posts/BOJ_2749/</id> <content src="https://thekeykim.github.io/posts/BOJ_2749/" /> <author> <name>DeokHwi, Kim</name> </author> <category term="백준" /> <category term="C++" /> <summary> 문제링크 2749 - 피보나치3 문제 피보나치 수는 0과 1로 시작한다. 0번째 피보나치 수는 0이고, 1번째 피보나치 수는 1이다. 그 다음 2번째 부터는 바로 앞 두 피보나치 수의 합이 된다. 이를 식으로 써보면 Fn = Fn-1 + Fn-2 (n ≥ 2)가 된다. n=17일때 까지 피보나치 수를 써보면 다음과 같다. 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597 n이 주어졌을 때, n번째 피보나치 수를 구하는 프로그램을 작성하시오. 입력 첫째 줄에 n이 주어진다. n은 1,000,000,000,000,000,000보다 작거나 같은 자연수이다. 풀이 유형 다이나믹 프로그래밍 수학 풀이 n이... </summary> </entry> </feed>
